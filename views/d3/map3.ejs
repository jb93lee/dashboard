<style>
.tmp path {
  stroke: white;
  stroke-width: 0.25px;
  fill: grey;
}
</style>
<script type="text/javascript" src="/d3/d3.v3.js"></script>
<script src="/d3/map/lib/topojson.js"></script>
<script>
$(document).ready(function(){
  $('.tmp text').hide();
  $('.tmp circle').mouseover(function(){
    $('.tmp text').show();
  }).mouseleave(function() {
    $('.tmp text').hide();
  });
});

var width = 900,
    height = 470;

var projection = d3.geo.mercator()
    .center([30, 0 ])
    .scale(800)
    .rotate([-160,0]);

    var svg = d3.select(".map").append("svg")
        .attr("width", width)
        .attr("height", height);

    var path = d3.geo.path()
        .projection(projection);

    var g = svg.append("g");

    // load and display the World
    d3.json("/d3/world-110m2.json", function(error, topology) {

    // load and display the cities
    d3.csv("/d3/cities.csv", function(error, data) {
        g.selectAll("circle")
           .data(data)
           .enter()

//         .append("a")
//    				  .attr("xlink:href", function(d) {
//    					  return "https://www.google.com/search?q="+d.city;}
//    				  )
         .append("circle")
           .attr("cx", function(d) {
                   return projection([d.lon, d.lat])[0];
           })
           .attr("cy", function(d) {
                   return projection([d.lon, d.lat])[1];
           })
           .attr("r", 3)
           .style("fill", "red");

        g.selectAll("text")
           .data(data)
           .enter()
         .append("text") // append text
           .attr("x", function(d) {
                   return projection([d.lon, d.lat])[0];
           })
           .attr("y", function(d) {
                   return projection([d.lon, d.lat])[1];
           })
           .attr("dy", -7) // set y position of bottom of text
          .style("fill", "black") // fill the text with the colour black
          .attr("text-anchor", "middle") // set anchor y justification
          .text(function(d) {return d.city;}); // define the text to display

    });

    g.selectAll("path")
          .data(topojson.object(topology, topology.objects.countries)
              .geometries)
        .enter()
          .append("path")
          .attr("d", path)
    });

    // zoom and pan
    var zoom = d3.behavior.zoom()
        .on("zoom",function() {
            g.attr("transform","translate("+
                d3.event.translate.join(",")+")scale("+d3.event.scale+")");
            g.selectAll("circle")
                .attr("d", path.projection(projection));
            g.selectAll("path")
                .attr("d", path.projection(projection));

      });

    svg.call(zoom);
</script>
